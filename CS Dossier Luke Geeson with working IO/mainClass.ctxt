#BlueJ class context
comment0.params=
comment0.target=mainClass()
comment0.text=\r\n\ this\ is\ the\ default\ constructor\r\n
comment1.params=
comment1.target=void\ main()
comment1.text=\r\n\ this\ method\ acts\ allows\ the\ user\ to\ input\ commands\ and\ information\ to\ the\ various\ methods.\ this\r\n\ method\ will\ interpret\ the\ commands\ and\ pass\ control\ to\ the\ other\ methods\ of\ this\ class\ which\ need\ it\r\n\ void\ -\ does\ not\ return\ anything\ -\ does\ not\ return\ anything\r\n
comment2.params=lst
comment2.target=void\ saveListToFile(SinglyLinkedList)
comment2.text=\r\n\ this\ method\ will\ serialise\ and\ save\ the\ Singly\ linked\ list\ object\ to\ the\ ".ser"\ file\ which\ is\ stored\r\n\ in\ the\ 'doc'\ folder\ of\ this\ project\ -\ void,\ no\ returns\r\n\ \r\n\ @param\ lst\ \ \ \ \ \ \ \ \ \ \ the\ Singly\ linked\ list\ which\ is\ to\ be\ saved\r\n
comment3.params=
comment3.target=SinglyLinkedList\ loadListFromFile()
comment3.text=\r\n\ this\ method\ will\ 'deserialize'\ and\ \ load\ the\ SinglyLinkedList\ object\ from\ the\ '.ser'\ file,\ which\r\n\ is\ saved\ in\ the\ "doc"\ folder\ of\ this\ project\r\n\ \r\n\ @return\ SinglyLinkedList\ the\ list\ which\ is\ loaded\ from\ the\ secondary\ storage\r\n
comment4.params=newPassword
comment4.target=void\ setPassword(java.lang.String)
comment4.text=\r\n\ this\ method\ is\ used\ to\ set\ the\ password\ that\ the\ system\ uses\ as\ a\ level\ \ of\ security\ -\ private\ so\r\n\ it\ cannot\ be\ changed\ from\ outside\ the\ class.\ It\ is\ simply\ a\ set\ method\ and\ it\ saves\ the\ password\ data\ to\ a\ new\ file\r\n\ \r\n\ @param\ newPassword\ \ \ the\ new\ password\ that\ the\ user\ wants\ to\ change\ to\ \r\n
comment5.params=systCode
comment5.target=java.lang.String\ getPassword(java.lang.String)
comment5.text=\r\n\ this\ method\ is\ used\ to\ return\ the\ user\ password\ if\ they\ forget\ it,\ it\ requires\ them\ to\ pass\r\n\ a\ integer\ which\ will\ be\ compared\ with\ a\ unique\ and\ unchanging\ system\ code.\ private\ so\ it\ is\ not\r\n\ accessible\ by\ malicious\ users\r\n\ \r\n\ @param\ systCode\ \ \ \ \ \ to\ be\ compared\ with\ the\ system\ code\r\n\ @return\ userPassword\ the\ user\ password\ returned\r\n
comment6.params=
comment6.target=java.lang.String\ getPasswordWithoutCode()
comment6.text=\r\n\ this\ method\ also\ returns\ the\ user\ password\ however,\ this\ method\ is\ only\ used\ to\ compare\ the\r\n\ passwords\ input\ with\ those\ on\ file\ -\ it\ is\ not\ accessible\ by\ the\ user\ -\ takes\ no\ parameters\r\n\ \r\n\ @return\ userPassword\ the\ password\ stored\ on\ file\ \ \ \ \r\n
comment7.params=newFileName
comment7.target=void\ setFileName(java.lang.String)
comment7.text=\r\n\ this\ is\ a\ "set"\ method\ which\ sets\ the\ file\ name\ of\ the\ ".ser"\ file\ which\ stores\ the\ data\ in\r\n\ serialized\ form\ -\ void\ as\ it\ simply\ sets\ data\ and\ private\ because\ it\ should\ not\ be\ accessible\ \r\n\ from\ outside\ this\ class\r\n\ \r\n\ @param\ newFileName\ \ \ \ \ \ \ sets\ the\ variable\ fileName\ as\ this\ value\r\n
comment8.params=
comment8.target=java.lang.String\ getFileName()
comment8.text=\r\n\ this\ method\ simply\ returns\ the\ value\ assigned\ to\ fileName,\ returns\ the\ name\ of\ the\ file\ -\ simply\r\n\ a\ get\ method\ so\ there\ are\ no\ parameters\ and\ private\ so\ outside\ users\ cannot\ see\ the\ name\ of\ the\ file\r\n\ \r\n\ @return\ String\ \ \ \ \ \ \ \ \ \ \ the\ file\ name\r\n
numComments=9
